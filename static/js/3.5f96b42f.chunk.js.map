{"version":3,"sources":["components/todoList/todo-header/index.js","components/todoList/todo-header/todo-header.js","components/todoList/post-list-item/index.js","components/todoList/post-list-item/post-list-item.js","components/todoList/post-list/index.js","components/todoList/post-list/post-list.js","components/todoList/post-status-filter/index.js","components/todoList/post-status-filter/post-status-filter.js","components/todoList/search-panel/index.js","components/todoList/search-panel/search-panel.js","components/todoList/post-add-form/index.js","components/todoList/post-add-form/post-add-form.js","components/todoList/todo/todo.js"],"names":["TodoHeader","liked","allPosts","className","PostListItem","this","props","label","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","onClick","type","Component","PostList","posts","elements","map","item","id","itemProps","PostStatusFilter","buttons","name","filter","onFilterSelect","clazz","SearchPanel","state","term","onUpdateSearch","bind","e","target","value","setState","placeholder","onChange","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","Todo","data","deleteItem","addItem","searchPost","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","length","indexOf","visiblePosts","filterPost"],"mappings":"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","file":"static/js/3.5f96b42f.chunk.js","sourcesContent":["import TodoHeader from \"./todo-header\";\r\nexport default TodoHeader;","import React from \"react\";\r\n\r\nimport \"./todo-header.css\";\r\n\r\nconst TodoHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"todo-header d-flex\">\r\n            <h1>My todo</h1>\r\n            <h2>{allPosts} records, of which I liked {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoHeader;","import PostListItem from \"./post-list-item\";\r\nexport default PostListItem;","import React, {Component} from \"react\";\r\n\r\nimport \"./post-list-item.css\";\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n\r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n        if (important) {\r\n            classNames += \" important\";\r\n        }\r\n\r\n        if (like) {\r\n            classNames += \" like\";\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                    className=\"app-list-item-label\"\r\n                    onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button className=\"btn-star btn-sm\"\r\n                            type=\"button\"\r\n                            onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostList from \"./post-list\";\r\nexport default PostList;","import React from \"react\";\r\n\r\nimport PostListItem from \"../post-list-item\";\r\n\r\nimport \"./post-list.css\";\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map(item => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key = {id} className='list-group-item'>\r\n                <PostListItem \r\n                {...itemProps}\r\n                onDelete={() => onDelete(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostStatusFilter from \"./post-status-filter\";\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\n\r\nexport default class PostStatusFilter extends Component {\r\n     constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.buttons = [\r\n\t\t\t{name: 'all', label: 'All'},\r\n\t\t\t{name: 'like', label: 'Liked'}\r\n        ];\r\n     }\r\n    render() {\r\n\r\n\t\tconst buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n\t\t\tconst active = filter === name;\r\n\t\t\tconst clazz = active ? 'btn-info' : 'btn-outline-dark'\r\n\t\t\treturn (\r\n\t\t\t\t<button type='button'\r\n\t\t\t\t \tclassName={`btn ${clazz}`}\r\n\t\t\t\t\tkey={name}\r\n\t\t\t\t\tonClick={() => onFilterSelect(name)}>\r\n\t\t\t\t\t{label}</button>\r\n\t\t\t)\r\n\t\t});\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\n\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: \"\"\r\n        };\r\n\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Record search\"\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n   }\r\n}\r\n\r\n","import PostAddForm from \"./post-add-form\";\r\nexport default PostAddForm;","import React, {Component} from \"react\";\r\n\r\nimport \"./post-add-form.css\";\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\"\r\n        };\r\n\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"What are you thinking about now?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-dark\">\r\n                    Add\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nimport TodoHeader from \"../todo-header\";\r\nimport PostList from \"../post-list\";\r\nimport PostStatusFilter from \"../post-status-filter\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport PostAddForm from \"../post-add-form\";\r\n\r\nimport \"./todo.css\";\r\n\r\nexport default class Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label: 'Going to learn React', important: true, like: false, id: 1},\r\n                {label: 'That is so good', important: false, like: false, id: 2},\r\n                {label: 'I need a break...', important: false, like: false, id: 3}\r\n            ],\r\n            term : \"\",\r\n            filter: \"all\"\r\n        };\r\n        \r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.searchPost = this.searchPost.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === \"like\") {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <div className=\"todo\">\r\n                <TodoHeader\r\n                liked={liked}\r\n                allPosts={allPosts}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}\r\n                    />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <PostAddForm\r\n                    onAdd={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}