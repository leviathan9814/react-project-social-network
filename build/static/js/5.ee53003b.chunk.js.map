{"version":3,"sources":["components/weather/weather.js"],"names":["api","Weather","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round"],"mappings":"gLAIMA,EACG,mCADHA,EAEI,2CA+DKC,UA5DC,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAEXC,EAFW,KAEJC,EAFI,OAGYF,mBAAS,IAHrB,mBAGXG,EAHW,KAGFC,EAHE,KA4BlB,OACI,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,eAA8B,UAAjH,SACA,iCACI,qBAAKF,UAAU,aAAf,SACA,uBACIG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAjCG,SAAAC,GACK,UAAZA,EAAIC,KACRC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACrDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACNjB,EAAWiB,GACXnB,EAAS,YA8BgB,oBAAhBC,EAAQG,KACjB,gCACI,sBAAKD,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BF,EAAQmB,KAAnC,KAA2CnB,EAAQoB,IAAIC,WACvD,qBAAKnB,UAAU,OAAf,SA7BQ,SAACoB,GACjB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAoBHE,CAAY,IAAIC,WAEvC,sBAAK9B,UAAU,cAAf,UACA,sBAAKA,UAAU,OAAf,UACK+B,KAAKC,MAAMlC,EAAQG,KAAKC,MAD7B,WAGA,qBAAKF,UAAU,gBAAf,SAAgCF,EAAQA,QAAQ,GAAGG,aAGlD","file":"static/js/5.ee53003b.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport \"./weather.css\";\r\n\r\nconst api = {\r\n    key: \"168be1528ff7208e321d2a3e59376e2f\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n  \r\nconst Weather = () => {\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n    const [weather, setWeather] = useState({});\r\n\r\n    const search = evt => {\r\n        if (evt.key === \"Enter\") {\r\n        fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n            setWeather(result);\r\n            setQuery(\"\");\r\n            });\r\n        }\r\n    }\r\n\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return `${day} ${date} ${month} ${year}`\r\n    }\r\n\r\n    return (\r\n        <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? \"weather warm\" : \"weather\") : \"weather\"}>\r\n        <main>\r\n            <div className=\"search-box\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"search-bar\"\r\n                placeholder=\"Search...\"\r\n                onChange={e => setQuery(e.target.value)}\r\n                value={query}\r\n                onKeyPress={search}\r\n                />\r\n            </div>\r\n            {(typeof weather.main != \"undefined\") ? (\r\n            <div>\r\n                <div className=\"location-box\">\r\n                <div className=\"location\">{weather.name}, {weather.sys.country}</div>\r\n                <div className=\"date\">{dateBuilder(new Date())}</div>\r\n                </div>\r\n                <div className=\"weather-box\">\r\n                <div className=\"temp\">\r\n                    {Math.round(weather.main.temp)}Â°c\r\n                </div>\r\n                <div className=\"weather-cloud\">{weather.weather[0].main}</div>\r\n                </div>\r\n            </div>\r\n            ) : (\"\")}\r\n        </main>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Weather;\r\n  "],"sourceRoot":""}