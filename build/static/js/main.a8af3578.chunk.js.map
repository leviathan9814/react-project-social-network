{"version":3,"sources":["redux/dialogsReducer.ts","components/login/login.module.css","components/formsControls/formsControls.js","components/modal/modal.js","components/header/header.js","api/api.js","redux/authReducer.ts","components/header/headerContainer.js","components/navbar/navbar.js","components/paginator/paginator.js","components/users/user.js","components/preloader/preloader.js","components/users/users.js","redux/usersReducer.ts","redux/selectors/usersSelectors.js","components/users/usersContainer.js","components/profile/myPosts/post/post.js","components/profile/myPosts/myPosts.js","redux/profileReducer.ts","redux/selectors/profileSelectors.js","components/profile/myPosts/MyPostContainer.js","components/profile/profileStatus/profileStatus.js","components/profile/profileAvatar/profileAvatar.js","components/profile/profileDataForm/profileDataForm.js","components/profile/descriptionUser/descriptionUser.js","components/profile/profile.js","components/profile/profileContainer.js","components/login/login.js","redux/appReducer.ts","components/app/app.js","redux/store.js","index.js","components/profile/descriptionUser/descriptionUser.module.css","components/formsControls/formsControls.module.css","validators/validators.js","components/paginator/paginator.module.css","redux/selectors/authSelectors.js","components/users/users.module.css","assets/images/user.png","components/profile/profileAvatar/profileAvatar.module.css"],"names":["SEND_MESSAGE","initialState","messagesData","id","name","dialogsData","text","sendMessage","newMessageBody","type","dialogsReducer","state","action","body","module","exports","FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Input","restProps","createNewField","component","validators","placeholder","validate","Modal","setAppElement","ModalProfile","useState","isOpen","setIsOpen","closeModal","onClick","onRequestClose","Header","reduxForm","form","onSubmit","handleSubmit","Field","isAuth","login","logout","to","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","dispatch","a","resultCode","getCaptchaUrl","url","authReducer","HeaderContainer","this","React","Component","connect","getIsAuth","getLogin","Navbar","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rigthPortionPageNumber","paginator","paginatorButton","filter","page","map","cn","selectedPage","pageNumber","e","User","user","followingInProgress","userItem","src","photos","small","userPhoto","userFollowed","followed","disabled","some","userInfo","Preloader","Users","users","totalUsersCount","isFetching","toggleState","setToggleState","toggleTab","index","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","followSuccess","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","folloUnfollowFlow","apiMethod","actionCreator","usersReducer","u","usersPage","getTotalUsersCount","getCurrentPage","getPageSize","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","compose","bind","items","totalCount","Post","class","message","count","MyPosts","memo","postElem","posts","item","AddPostReduxForm","values","addPost","newPostText","reset","required","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","setStatus","getUserProfile","profileReducer","profilePage","getStatusProfile","getAuthorizedUserId","auth","getPosts","getNewPostText","MyPostContainer","ProfileStatus","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","ProfileAvatar","isOwner","mainPhoto","large","inputWrapper","customFileUpload","multiple","target","files","length","ProfileDataReduxForm","style","formSummaryError","Object","keys","contacts","key","contact","ProfileData","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","DescriptionUser","descriptionBlock","avatarBlock","statusAndDataBlock","statusBlock","initialValues","Profile","ProfileContainer","match","params","authorizedUserId","history","refreshProfile","prevProps","file","getState","stopSubmit","_error","messages","Promise","reject","withRouter","LoginReduxForm","loginForm","INITIALIZED_SUCCESS","initialized","appReducer","MessagesContainer","lazy","TodoList","Weather","App","exact","path","render","Suspense","fallback","reducers","combineReducers","dialogsPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a8af3578.chunk.js","sourcesContent":["const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\ntype MessageType = {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\ntype DialogType = {\r\n    id: number,\r\n    text: string\r\n}\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, name: \"Yura\"},\r\n        {id: 2, name: \"Masha\"},\r\n        {id: 3, name: \"Christina\"},\r\n        {id: 4, name: \"Roma\"}\r\n    ] as Array<MessageType>,\r\n    dialogsData: [\r\n        {id: 1, text: \"Hi\"},\r\n        {id: 2, text: \"I learning React\"},\r\n        {id: 3, text: \"and Redux\"},\r\n        {id: 4, text: \"I looking for a job\"}\r\n    ] as  Array<DialogType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body= action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, {id: 5, text: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SendMessageType = {\r\n    type: typeof SEND_MESSAGE,\r\n    newMessageBody: string\r\n}\r\n\r\nexport const sendMessage = (newMessageBody: string): SendMessageType => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login_loginForm__1xxdW\"};","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\n\r\nimport styles from \"./formsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n           <div>\r\n                {props.children}\r\n           </div>\r\n           {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createNewField = (component, name, validators, placeholder, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field component={component} \r\n                name={name}\r\n                validate={validators}\r\n                placeholder={placeholder}\r\n                {...props}/>\r\n            {text}\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./modal.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst ModalProfile = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn btn-dark\" onClick={openModal}>My CV</button>\r\n            <Modal isOpen={isOpen} onRequestClose={closeModal}>\r\n                <h2>Modal</h2>\r\n                <p>body</p>\r\n                <button onClick={closeModal}>Close CV</button>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalProfile;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport ModalProfile from \"../modal/modal\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header-title\">\r\n                <h1>My network</h1>\r\n                <div className=\"cv-block\">\r\n                    <ModalProfile/>\r\n                </div>\r\n                {/* <HeaderSearchReduxForm/> */}\r\n                {\r\n                    props.isAuth \r\n                    ? <div>{props.login} - <button className=\"btn-logout\" onClick={props.logout}>Log out</button> </div>  \r\n                    : <Link className=\"btn btn-outline-dark\" to=\"/login\">Sign in</Link>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst HeaderSearchForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component=\"input\" name=\"headerSearch\" placeholder=\"search...\" className=\"header-search\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst HeaderSearchReduxForm = reduxForm({form: \"headerSearchForm\"})(HeaderSearchForm);\r\n\r\nexport default Header;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"e4bb28f3-b839-4c8a-81b2-0e7fd20c91c3\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response =>  {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow (userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow (userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }, \r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n\r\n    getStatus (userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n    updateStatus (status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    \r\n    login (email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n\r\n    logout () {\r\n        return instance.delete(\"auth/login\");\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n        return instance.get(`/security/get-captcha-url`)\r\n    },\r\n}\r\n\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"GET-CAPTCHA-URL-SUCCESS\";\r\n\r\nlet initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SetAuthUserDataPayloadType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n}\r\n\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataType => ({type: SET_USER_DATA, payload : {userId, email, login, isAuth}});\r\n\r\ntype GetCaptchaUrlSuccessType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl: string}\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessType => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    const response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {getIsAuth, getLogin} from \"../../redux/selectors/authSelectors\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state),\r\n        login: getLogin(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className=\"nav\">\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/profile\"><i className=\"fas fa-user-circle\"></i> My Profile</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/messages\"><i className=\"fas fa-envelope\"></i> Messages</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/users\"><i className=\"fas fa-users\"></i> Users</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/todo\"><i className=\"fas fa-list-ul\"></i> Todo List</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/weather\"><i className=\"fas fa-cloud\"></i> Weather</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/feed\"><i className=\"fas fa-comment-alt\"></i> Feed</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/music\"><i className=\"fas fa-play-circle\"></i> Music</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/photo-video\"><i className=\"fas fa-image\"></i> Photo | Video</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/settings\"><i className=\"fas fa-cog\"></i> Settings</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\n\r\nimport styles from \"./paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil (totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i=1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rigthPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 && \r\n            <button className={styles.paginatorButton} onClick={() => {setPortionNumber(portionNumber - 1)}}>&#8249; Prev</button>}\r\n\r\n            {\r\n                pages.filter(page => page >= leftPortionPageNumber && page <= rigthPortionPageNumber)\r\n                    .map(page => {\r\n                        return (\r\n                            <span className={cn({\r\n                                [styles.selectedPage] : currentPage === page\r\n                            }, styles.pageNumber)} key={page}\r\n                                                onClick={(e) => onPageChanged(page)}\r\n                            >{page}</span>\r\n                        )\r\n                    })\r\n            }\r\n        {\r\n            portionCount > portionNumber &&\r\n                <button className={styles.paginatorButton} onClick={() => {setPortionNumber(portionNumber + 1)}}>Next &#8250;</button>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\n\r\nimport styles from \"./users.module.css\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div key={user.id} className={styles.userItem}>\r\n            <div>\r\n                <div>\r\n                    <Link to={\"/profile/\" + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                            className={styles.userPhoto}/>\r\n                    </Link>\r\n                </div>\r\n                <div className={styles.userFollowed}>\r\n                {\r\n                    user.followed\r\n                        ? <button className=\"btn btn-outline-dark\" disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                    onClick={() => {unfollow(user.id) }}>\r\n                            Unfollow</button>\r\n                        : <button className=\"btn btn-outline-dark\" disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                    onClick={() => { follow(user.id) }}>\r\n                            Follow</button>\r\n                }\r\n                </div>\r\n            </div>\r\n            <div className={styles.userInfo}>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                {/* <span>\r\n                    <div>location.country</div>\r\n                    <div>location.city</div>\r\n                </span> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\n\r\nimport \"./preloader.css\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, {useState} from \"react\";\r\nimport Paginator from \"../paginator/paginator\";\r\nimport User from \"./user\";\r\nimport Preloader from \"../preloader/preloader\";\r\n\r\nimport \"./tabsUsers.css\";\r\n\r\nconst Users = ({users, totalUsersCount, pageSize, onPageChanged, currentPage, follow, isFetching, unfollow, followingInProgress}) => {\r\n\r\n    const [toggleState, setToggleState] = useState(1);\r\n\r\n    const toggleTab = (index) => {\r\n        setToggleState(index);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalUsersCount} \r\n                pageSize={pageSize}\r\n                onPageChanged={onPageChanged}\r\n                currentPage={currentPage}/>\r\n            { isFetching ? <Preloader /> : \r\n                <div>\r\n                    <div className=\"bloc-tabs\">\r\n                        <button className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n                            onClick={() => toggleTab(1)}>    \r\n                        All users\r\n                        </button>\r\n                        <button className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n                            onClick={() => toggleTab(2)}>\r\n                        Followed users\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content-tabs\">\r\n                        {!users.followed ?\r\n                            <div className={toggleState === 1 ? \"content active-content\" : \"content\"}>\r\n                            {\r\n                                users.map(user => <User user={user}\r\n                                    follow={follow}\r\n                                    unfollow={unfollow}\r\n                                    followingInProgress={followingInProgress}/>)\r\n                            }\r\n                            </div>\r\n                            :\r\n                            <div className={toggleState === 2 ? \"content active-content\" : \"content\"}>\r\n                            {\r\n                                users.map(user => <User user={user}\r\n                                    follow={follow}\r\n                                    unfollow={unfollow}\r\n                                    followingInProgress={followingInProgress}/>)\r\n                            }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    {/* {\r\n                        users.map(user => <User user={user}\r\n                                                follow={follow}\r\n                                                unfollow={unfollow}\r\n                                                followingInProgress={followingInProgress}/>)\r\n                                                \r\n                    } */}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {usersAPI} from \"../api/api\";\r\nimport {PhotosType, UserType} from \"../types/types\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE-IS-FOLLOWING-PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 12,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { \r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { \r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { \r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS :\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessType = {\r\n    type: typeof FOLLOW,\r\n    userId: number\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessType => ({type: FOLLOW, userId });\r\n\r\ntype UnfollowSuccessType = {\r\n    type: typeof UNFOLLOW,\r\n    userId: number\r\n}\r\n\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => ({type: UNFOLLOW, userId });\r\n\r\ntype UsersType = {\r\n    type: typeof SET_USERS,\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): UsersType => ({type: SET_USERS, users });\r\n\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: number\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountType => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\n\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE,\r\n    currentPage: number\r\n}\r\n\r\nexport const setCurrentPage = (currentPage: number):SetCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage});\r\n\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETCHING,\r\n    isFetching: boolean\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\ntype ToggleIsFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching: boolean,\r\n    userId: number\r\n}\r\n\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number): ToggleIsFollowingProgressType => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nconst folloUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: any) => {\r\n    folloUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId: number) => async (dispatch: any) => {\r\n    folloUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n\r\n}\r\n\r\nexport default usersReducer;","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport Users from \"./users\";\r\nimport {follow, unfollow, toggleIsFollowingProgress, requestUsers} from \"../../redux/usersReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nimport {getUsers, getTotalUsersCount, getCurrentPage, getPageSize, getIsFetching, getFollowingInProgress} from \"../../redux/selectors/usersSelectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Users {...this.props}\r\n                    onPageChanged={this.onPageChanged}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        pageSize: getPageSize(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow,\r\n        toggleIsFollowingProgress, requestUsers})\r\n)(UsersContainer);","import React from \"react\";\r\n\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <div class=\"post-item\">\r\n                <img src=\"https://cdn.jpegmini.com/user/images/slider_puffin_before_mobile.jpg\" />\r\n                <>{props.message}</>\r\n            </div>\r\n            <div>\r\n                <span><i class=\"far fa-heart\"></i> {props.count}</span>\r\n                <span><i class=\"far fa-comment\"></i></span>\r\n                <span><i class=\"fas fa-share\"></i></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./post/post\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport {required } from \"../../../validators/validators\";\r\nimport { Textarea, createNewField } from \"../../formsControls/formsControls\";\r\n\r\nimport \"./myPosts.css\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postElem = props.posts.map(item => <Post key={item.id} message={item.message} count={item.count}/>);\r\n\r\n    const addNewPost = (values, dispatch) => {\r\n        props.addPost(values.newPostText);\r\n        dispatch(reset(\"ProfileAddPost\"));\r\n    }\r\n\r\n    return (\r\n       <>\r\n        <div className=\"my-posts\">\r\n            <h3>My Posts</h3>\r\n            <AddPostReduxForm onSubmit={addNewPost}/>\r\n        </div>\r\n        <div>\r\n            {postElem}\r\n        </div>\r\n       </>\r\n    )\r\n})\r\n\r\nconst AddPostForm = ({handleSubmit}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component=\"textarea\"\r\n                    name=\"newPostText\" \r\n                    validate={[required]} \r\n                    placeholder=\"What's new?\"\r\n                    className=\"add-post-textarea\"/>\r\n            </div>\r\n            {/* {createNewField(Textarea, \"newPostText\", [required], \"Add post\")} */}\r\n            <div>\r\n                <button className=\"btn btn-outline-dark add-post\">Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: \"ProfileAddPost\"})(AddPostForm);\r\n\r\nexport default MyPosts;","import { stopSubmit } from \"redux-form\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE-PHOTO-SUCCESS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you\", count: 5},\r\n        {id: 2, message: \"Im fine\", count: 7},\r\n        {id: 3, message: \"Nice\", count: 3}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null, \r\n    status: \"\",\r\n    newPostText: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: \r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 4, message: action.newPostText, count: 21}]\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos } as ProfileType\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype AddPostType = {\r\n    type: typeof ADD_POST,\r\n    newPostText: string\r\n}\r\n\r\nexport const addPost = (newPostText: string): AddPostType => ({type: ADD_POST, newPostText});\r\n\r\ntype SetUserProfileType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({type: SET_USER_PROFILE, profile});\r\n\r\ntype SetStatusType = {\r\n    type: typeof SET_STATUS,\r\n    status: string\r\n}\r\n\r\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status});\r\n\r\ntype SavePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS,\r\n    photos: PhotosType\r\n}\r\n\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus  = (status: string) => async (dispatch: any) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","export const getProfile = (state) => {\r\n    return state.profilePage.profile\r\n}\r\n\r\nexport const getStatusProfile = (state) => {\r\n    return state.profilePage.status\r\n}\r\n\r\nexport const getAuthorizedUserId = (state) => {\r\n    return state.auth.userId\r\n}\r\n\r\nexport const getPosts = (state) => {\r\n    return state.profilePage.posts\r\n}\r\n\r\nexport const getNewPostText = (state) => {\r\n    return state.profilePage.newPostText\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport MyPosts from \"./myPosts\";\r\nimport {addPost} from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport {getPosts, getNewPostText} from \"../../../redux/selectors/profileSelectors\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: getPosts(state),\r\n        newPostText: getNewPostText(state)\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostContainer;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || \"Встановити статус\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nimport styles from \"./profileAvatar.module.css\";\r\n\r\nconst ProfileAvatar = ({profile, isOwner, savePhoto}) => {\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <img className={styles.mainPhoto} src={profile.photos.large || userPhoto} />\r\n            { isOwner && <div className={styles.inputWrapper}>\r\n                            <label className={styles.customFileUpload}>\r\n                            <input type=\"file\" multiple onChange={onMainPhotoSelected} />\r\n                            <i className=\"fa fa-cloud-upload\" /> Change photo\r\n                            </label>\r\n                        </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileAvatar;","import React from \"react\";\r\nimport {createNewField, Input, Textarea} from \"../../formsControls/formsControls\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\n\r\nimport style from \"../../formsControls/formsControls.module.css\";\r\nimport styles from \"../descriptionUser/descriptionUser.module.css\";\r\nimport \"./profileDataForm.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <div><button class=\"btn btn-outline-dark\">Save</button></div>\r\n                {error && <div className={style.formSummaryError}>{error}</div>}\r\n            </div>\r\n            <div className=\"full-name\">\r\n                <b>Full name</b>: \r\n                    <Field component=\"input\"\r\n                        name=\"fullName\" \r\n                        validate={[]} \r\n                        placeholder=\"Full name\"/>\r\n                    \r\n                     {/* {createNewField(Input, \"fullName\", [], \"Full name\")} */}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                    <Field component=\"input\"\r\n                            name=\"lookingForAJob\" \r\n                            validate={[]} \r\n                            type=\"checkbox\"/>\r\n                \r\n                {/* { createNewField(Input, \"lookingForAJob\", [], \"\", {type: \"checkbox\"} )} */}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                    <Field component=\"textarea\"\r\n                            name=\"lookingForAJobDescription\" \r\n                            validate={[]} \r\n                            placeholder=\"My professional skills\"/>\r\n                    \r\n                {/* { createNewField(Textarea, \"lookingForAJobDescription\", [], \"My professional skills\"  )} */}\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <b>About me</b>:\r\n                    <Field component=\"textarea\"\r\n                            name=\"aboutMe\" \r\n                            validate={[]} \r\n                            placeholder=\"About me\"/>\r\n                \r\n                {/* { createNewField(Textarea, \"aboutMe\", [], \"About me\")} */}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={styles.contact}>\r\n                <b>{key}:\r\n                    <Field component=\"input\"\r\n                            name={\"contacts\" + key} \r\n                            validate={[]} \r\n                            placeholder={key}/>\r\n                    </b>\r\n                    {/* {createNewField(Input, \"contacts.\" + key, [], key )} */}\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n} \r\n\r\nconst ProfileDataReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../preloader/preloader\";\r\nimport ProfileStatus from \"../profileStatus/profileStatus\";\r\nimport ProfileAvatar from \"../profileAvatar/profileAvatar\";\r\nimport ProfileDataForm from \"../profileDataForm/profileDataForm\";\r\n\r\n\r\n\r\nimport styles from \"./descriptionUser.module.css\";\r\n\r\nconst DescriptionUser = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    \r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false)\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <div className={styles.avatarBlock}>\r\n                    <ProfileAvatar profile={profile} isOwner={isOwner} savePhoto={savePhoto}/>\r\n                </div>\r\n                <div className={styles.statusAndDataBlock}>\r\n                    <div className={styles.statusBlock}>\r\n                        <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                    </div>\r\n                    <div>\r\n                        { editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n                    </div>\r\n               </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button class=\"btn btn-outline-dark\" onClick={goToEditMode}>Edit</button></div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={styles.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default DescriptionUser;","import React from \"react\";\r\nimport MyPostContainer from \"./myPosts/MyPostContainer\";\r\nimport DescriptionUser from \"./descriptionUser/descriptionUser\";\r\n\r\n\r\nimport \"./profile.css\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <DescriptionUser isOwner={props.isOwner} \r\n                profile={props.profile} \r\n                status={props.status} \r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}/>\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {getProfile, getStatusProfile, getAuthorizedUserId} from \"../../redux/selectors/profileSelectors\";\r\nimport {getIsAuth} from \"../../redux/selectors/authSelectors\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        \r\n        this.props.getUserProfile (userId);\r\n        this.props.getStatus (userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} \r\n                    profile={this.props.profile} \r\n                    status={this.props.status} \r\n                    updateStatus={this.props.updateStatus}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    savePhoto={this.props.savePhoto} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isAuth: getIsAuth(state),\r\n        status: getStatusProfile(state),\r\n        authorizedUserId: getAuthorizedUserId(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, updateStatus, getStatus, savePhoto, saveProfile }),\r\n    withRouter\r\n)(ProfileContainer); ","import React from \"react\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport {reduxForm } from \"redux-form\";\r\nimport {required} from \"../../validators/validators\";\r\nimport { createNewField, Input } from \"../formsControls/formsControls\";\r\n\r\nimport style from \"../formsControls/formsControls.module.css\";\r\nimport styles from \"./login.module.css\";\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.loginForm}>\r\n            <h1>Login</h1>\r\n            <h5>Use your account</h5>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            {createNewField(Input, \"email\", [required], \"email\")}\r\n            {createNewField(Input, \"password\", [required], \"password\", {type: \"password\"})}\r\n            {/* {createNewField(Input, \"rememberMe\", null, null, {type: \"checkbox\"})} remember me \r\n             */}\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createNewField(Input, \"captcha\", [required], \"Symbols from image\")}\r\n                \r\n            {\r\n                error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div> \r\n            }\r\n            <div>\r\n                <button className=\"btn btn-outline-dark\">Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm);\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nexport type InitilStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitilStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: any): InitilStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype InitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessType => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n}\r\n\r\nexport default appReducer;","import React from \"react\";\nimport HeaderContainer from \"../header/headerContainer\";\nimport Navbar from \"../navbar/navbar\";\nimport {Route, withRouter, Switch, Redirect} from \"react-router-dom\";\nimport UsersContainer from \"../users/usersContainer\";\nimport ProfileContainer from \"../profile/profileContainer\";\nimport Login from \"../login/login\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {initializeApp} from \"../../redux/appReducer\";\nimport Preloader from \"../preloader/preloader\";\n\n\nimport './app.css';\n\nconst MessagesContainer = React.lazy(() => import('../messages/messagesContainer'));\nconst TodoList = React.lazy(() => import('../todoList/todo/todo'));\nconst Weather = React.lazy(() => import('../weather/weather'));\n\nclass App extends React.Component {\n\n  // componentDidMount() {\n  //   this.props.initializeApp();\n  // }\n\n  render() {\n    // if(!this.props.initialized) {\n    //   return <Preloader/>\n    // }\n\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer/>\n        <Navbar/>\n        <div className=\"app-wrapper-content\">\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/profile\"/>}/>\n            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />}/>\n            <Route path=\"/messages\" render={() => <React.Suspense fallback={<Preloader/>}>\n                                                    <MessagesContainer />\n                                                  </React.Suspense>}/>\n            <Route path=\"/todo\" render={() => <React.Suspense fallback={<Preloader/>}>\n                                                <TodoList />\n                                              </React.Suspense>}/>\n            <Route path=\"/users\" render={() => <UsersContainer/>}/>\n            <Route path=\"/weather\" render={() => <React.Suspense fallback={<Preloader/>}>\n                                                    <Weather />\n                                                  </React.Suspense>}/>\n            <Route path=\"/login\" render={() => <Login/>}/>\n            <Route path=\"*\" render={() => <div>404 not founded!</div>}/>\n          </Switch>\n        </div>\n      </div>\n    );\n  }  \n}\n\n// const mapStateToProps = (state) => ({\n//   initialized: state.app.initialized,\n// })\n\n// export default compose(\n//   withRouter,\n//   connect(mapStateToProps, {initializeApp}))(App);\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from \"./authReducer\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    form: formReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"descriptionUser_descriptionBlock__1rfD-\",\"statusAndDataBlock\":\"descriptionUser_statusAndDataBlock__16b6B\",\"statusBlock\":\"descriptionUser_statusBlock__1Cxv_\",\"contact\":\"descriptionUser_contact__2aXF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__1UIHp\",\"error\":\"formsControls_error__1AROk\",\"formSummaryError\":\"formsControls_formSummaryError__21xmZ\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.lenght > maxLength) return `Max lenght is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__2EAor\",\"pageNumber\":\"paginator_pageNumber__2knGM\",\"active\":\"paginator_active__2jgJJ\",\"selectedPage\":\"paginator_selectedPage__3jfh8\",\"paginatorButton\":\"paginator_paginatorButton__27Ouz\"};","export const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getLogin = (state) => {\r\n    return state.auth.login\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1ZgkX\",\"userItem\":\"users_userItem__quOI6\",\"userFollowed\":\"users_userFollowed__1IswC\",\"userInfo\":\"users_userInfo__3NUCE\"};","export default __webpack_public_path__ + \"static/media/user.bf28321f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"profileAvatar_mainPhoto__35t5G\",\"inputWrapper\":\"profileAvatar_inputWrapper__2a5XP\",\"customFileUpload\":\"profileAvatar_customFileUpload__wFkKE\"};"],"sourceRoot":""}